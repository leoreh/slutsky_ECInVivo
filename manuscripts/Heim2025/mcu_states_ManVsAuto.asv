% mcu_states_ManVsAuto


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% organize and load data
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% files with manual curation
basepaths = {...
    'E:\Data\lh132\lh132_230413_094013',...
    'E:\Data\lh133\lh133_230413_094013',...
    'E:\Data\lh96\lh96_220120_090157',...
    'E:\Data\lh142\lh142_231005_091832',...
    'E:\Data\lh107\lh107_220518_091200',...
    };
nfiles = length(basepaths);

% load data
v = basepaths2vars('basepaths', basepaths, 'vars',...
    ["sleep_labelsMan"; "sleep_states"]);

% state params
cfg = as_loadConfig();
sstates = [1, 4, 5];
nstates = length(sstates);
clr = cfg.colors(sstates);
snames = cfg.names(sstates);

% bout params
interDur = 5;
minDur = 5;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% find indices of manual curation
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% initialize 
manIdx = nan(nfiles, 2);
clear epochStats

% go over files
for ifile = 1 : nfiles

    % get labels
    labelsAuto = v(ifile).ss.labels_net;
    labelsMan = v(ifile).labels;

    % ---------------------------------------------------------------------
    % detect undefined labels  
    diffs = diff([0; labelsMan ~= cfg.nstates + 2; 0]);  % Add padding to detect edges
    startIdx = find(diffs == 1);
    endIdx = find(diffs == -1) - 1;

    % filter out undefined segments 
    validSegments = arrayfun(@(s, e) any(labelsMan(s:e) ~= cfg.nstates + 2),...
        startIdx, endIdx);

    % extract start and end indices of valid segments
    manIdx(ifile, :) = [startIdx(validSegments), endIdx(validSegments)];
    curIdx = manIdx(ifile, 1) : manIdx(ifile, 2);     % manually curated indices 
    
    % ---------------------------------------------------------------------
    % calculate epochStats for Man and Auto

    % auto
    [~, epochStats(ifile, 1)] = as_epochs('labels', labelsAuto(curIdx),...
        'minDur', minDur, 'interDur', interDur);

    % manual
    [~, epochStats(ifile, 2)] = as_epochs('labels', labelsMan(curIdx),...
        'minDur', minDur, 'interDur', interDur);

end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% organize data
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

for ifile = 1 : nfiles

epLen = mean(cell2padmat(epochStats(ifile, 1).epLen(sstates), 2), 'omitnan')


end


stats = catfields([epochStats(:)], 'addim', true);

stats = catfields([epochStats(:)], 2, true);

epLen = catfields(vertcat(epochStats(:).epLen), 'addim', false);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% plot confusion matrix
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% confusion matrix (relative to manual labels)
[ss.netPrecision, ss.netRecall] = as_cm(labelsMan, labelsAuto,...
    'saveFig', false);




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Plot Comparison
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


% Open figure
fh = figure;
setMatlabGraphics(true);
set(fh, 'WindowState','maximized');
tlayout = [3, length(sstates)];
th = tiledlayout(tlayout(1), tlayout(2));
th.TileSpacing = 'tight';
th.Padding = 'none';
title(th, basename, 'interpreter', 'none');

% Plot epoch length for each state
tilebias = 0;
for istate = 1 : length(sstates)
    axh = nexttile(th, tilebias + istate); hold on; cla;
    stateIdx = sstates(istate);
    epLen = cell2padmat({epochStats.epLen{stateIdx}, epochStats_man.epLen{stateIdx}}, 2);
    plot_boxMean('axh', axh, 'dataMat', epLen, 'plotType', 'bar', 'clr', clr{(istate)});
    ylabel('Epoch Length (s)');
    title([snames{istate}]);
    xticklabels({'Auto', 'Man'});
end

% Plot number of epochs
tilebias = 3;
nepochs = [epochStats.nepochs(sstates); epochStats_man.nepochs(sstates)]';
for istate = 1 : length(sstates)
    axh = nexttile(th, tilebias + istate); hold on; cla;
    stateIdx = sstates(istate);
    plot_boxMean('axh', axh, 'dataMat', nepochs(istate, :), 'plotType', 'bar', 'clr', clr{(istate)});
    ylabel('Number Epochs');
    title([snames{istate}]);
    xticklabels({'Auto', 'Man'});
end

% Plot number of epochs
tilebias = 6;
prctDur = [epochStats.prctDur(sstates); epochStats_man.prctDur(sstates)]';
for istate = 1 : length(sstates)
    axh = nexttile(th, tilebias + istate); hold on; cla;
    stateIdx = sstates(istate);
    plot_boxMean('axh', axh, 'dataMat', prctDur(istate, :), 'plotType', 'bar', 'clr', clr{(istate)});
    ylabel('State Duration (%)');
    title([snames{istate}]);
    xticklabels({'Auto', 'Man'});
end

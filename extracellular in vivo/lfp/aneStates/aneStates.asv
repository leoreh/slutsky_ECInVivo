
% analyze anesthesia states. Is essentialy a wrapper for analysis at the
% mouse (aneStates_m) and group (aneStates_g) level.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% arguments
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
basepath{1} = 'E:\Data\Others\DZ\Field\Acute recordings\2h-3h\APPPS1';
basepath{2} = 'E:\Data\Others\DZ\Field\Acute recordings\Long recordings\APPPS1';
basepath{3} = 'E:\Data\Others\DZ\Field\Acute recordings\Long recordings\WT';
basepath{4} = 'E:\Data\Others\DZ\Field\Acute recordings\2h-3h\WT';
rm = cell(4, 1);

forceA = false;
forceL = false;
saveFig = true;
graphics = false;
saveVar = true;
ch = 1;
smf = 6;
fs = 1250;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% group data
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
for i = 1 : length(basepath)
        as{i} = aneStates_g('basepath', basepath{i}, 'rm', rm{i},...
            'graphics', graphics, 'saveVar', saveVar,...
            'saveFig', saveFig, 'forceA', forceA);
        
        nspks{i} = as{i}.nspks;
        nspksEp{i} = as{i}.nspksEp;
        recDur{i} = as{i}.recDur;
        epDur{i} = as{i}.epDur;
        thr{i} = as{i}.thr;
        grp{i} = as{i}.grp;
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% graphics
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

if graphics
    
    figure
    set(gcf, 'units','normalized','outerposition',[0 0 1 1]);
    
    % duration bar
    subplot(2, 3, 1 : 3)
    for i = 1 : 4
        stdshade(as{i}.iis, 0.5, 'k', as.t / fs / 60)
    end
    legend(grp)
    ylabel('Rate [IIS / min]')
    xlabel('Time [m]')
    box off
    set(gca, 'TickLength', [0 0])
    
    % duration bar
    subplot(2, 3, 4)
    b = bar(([cellfun(@mean, epDur)' (cellfun(@mean, recDur) - cellfun(@mean, epDur))']), 'stacked',...
        'FaceColor', 'flat');
    b(1).CData(:, :) = ones(4 ,3) * 0.8;
    b(2).CData(:, :) = zeros(4 ,3);
    axis tight
    xticklabels(grp)
    legend({'BS', 'Not BS'})
    ylabel('Duration [m]')
    title('Duration')
    box off
    set(gca, 'TickLength', [0 0])
    
    % IIS bar
    subplot(2, 3, 5)
    b = bar(([cellfun(@mean, nspksEp)' (cellfun(@mean, nspks) - cellfun(@mean, nspksEp))']), 'stacked',...
        'FaceColor', 'flat');
    b(1).CData(:, :) = ones(4 ,3) * 0.8;
    b(2).CData(:, :) = zeros(4 ,3);
    axis tight
    xticklabels(grp)
    legend({'IIS in BS', 'IIS out BS'})
    ylabel('IIS [#]')
    title('IIS')
    box off
    set(gca, 'TickLength', [0 0])
    
    % threshold bar
    subplot(2, 3, 6)
    b = bar(cellfun(@mean, thr)', 'FaceColor', 'flat');
    b(1).CData(:, :) = zeros(4 ,3);
    axis tight
    xticklabels(grp)
    ylabel('Threshold [mV]')
    title('Threshold')
    box off
    set(gca, 'TickLength', [0 0])
    
    if saveFig
        figname = ['summary'];
        export_fig(figname, '-tif', '-transparent')
        % savePdf(figname, basepath, ff)
    end
end
